def DOCKER_REGISTRY = "inyub"  // 본인의 Docker Hub 사용자명
def REPOSITORY_NAME = "tuddyfuddy"
def SERVICE_NAME = "chat-service"  // 서비스별로 변경

pipeline {
    agent {
        docker {
            image 'python:3.11-slim'  // Python 이미지를 사용하는 agent
            args '-u root'  // root 권한으로 실행
        }
    }
    
    environment {
        DOCKER_CREDENTIALS = credentials('docker-hub-credential')
    }
    
    stages {
        stage('Test') {
            steps {
                dir(SERVICE_NAME) {
                    script {
                        // Python 가상환경 생성 및 테스트 실행
                        sh '''
                            python -m venv venv
                            . venv/bin/activate
                            pip install -r requirements.txt
                            pip install pytest
                            pytest || echo "Tests failed but continuing"
                        '''
                    }
                }
            }
        }
        
        stage('Docker Build & Push') {
            steps {
                dir(SERVICE_NAME) {
                    sh """
                        docker build -t ${DOCKER_REGISTRY}/${REPOSITORY_NAME}:${SERVICE_NAME} .
                        
                        echo ${DOCKER_CREDENTIALS_PSW} | docker login -u ${DOCKER_CREDENTIALS_USR} --password-stdin
                        
                        docker push ${DOCKER_REGISTRY}/${REPOSITORY_NAME}:${SERVICE_NAME}
                    """
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // 기존 컨테이너 중지 및 제거
                    sh """
                        docker stop ${SERVICE_NAME} || true
                        docker rm ${SERVICE_NAME} || true
                    """
                    
                    // 새 컨테이너 실행
                    sh """
                        docker run -d \
                            --name ${SERVICE_NAME} \
                            --network app-network \
                            -p 8000:8000 \
                            -e MONGODB_URL=mongodb://chat-mongodb:27017 \
                            -e REDIS_URL=redis://chat-redis:6379 \
                            -e ELASTICSEARCH_URL=http://chat-elasticsearch:9200 \
                            ${DOCKER_REGISTRY}/${REPOSITORY_NAME}:${SERVICE_NAME}
                    """
                }
            }
        }
    }
    
    post {
        always {
            sh 'docker logout'
        }
    }
}